<?xml version="1.0" encoding="UTF-8" ?>
<Module>
        <ModulePrefs title="Happiness Metric Poll">
                <Require feature="rpc" />
                <Require feature="views" />
                <Require feature="locked-domain" />
        </ModulePrefs>
        <Content type="html"><![CDATA[

<html>

<link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap.min.css">
<link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap-theme.min.css">
<style>
html, body {
  height: 100%;
  background-color: #333;
}
body {
  color: #fff;
  text-align: center;
  text-shadow: 0 1px 3px rgba(0,0,0,.5);
  box-shadow: inset 0 0 100px rgba(0,0,0,.5);
}
</style>

<body>
<script src="//plus.google.com/hangouts/_/api/v1/hangout.js"></script>
<script type="text/javascript" src="https://www.google.com/jsapi"></script>

<div class="container" style="width: 700;">
  <div class="page-header">
    <h2>Happiness <small>the object and design of our existence</small></h2>
  </div>

  <div class="btn-group btn-group-lg">
    <button type="button" value="0" class="btn btn-danger">miserable</button>
    <button type="button" value="1" class="btn btn-warning">1</button>
    <button type="button" value="2" class="btn btn-warning">2</button>
    <button type="button" value="3" class="btn btn-warning">3</button>
    <button type="button" value="4" class="btn btn-warning">4</button>
    <button type="button" value="5" class="btn btn-warning">5</button>
    <button type="button" value="6" class="btn btn-info">6</button>
    <button type="button" value="7" class="btn btn-info">7</button>
    <button type="button" value="8" class="btn btn-info">8</button>
    <button type="button" value="9" class="btn btn-info">9</button>
    <button type="button" value="10" class="btn btn-success">well-chuffed</button>
  </div>

  <div class="container">
    <div class="row">
      <div class="col-sm-3"></div>
      <div class="col-sm-4 lead">
        <h3>You</h3>
      </div>
      <div class="col-sm-2 lead text-center">
        <h3 class="your-vote">?</h3>
      </div>
      <div class="col-sm-3"></div>
    </div>

    <div class="row">
      <div class="col-sm-3"></div>
      <div class="col-sm-4 lead">
        <h3>Team <small><span class="nr-voting">0</span> vote(s) from <span class="nr-participants">0</span> participant(s)</small></h3>
      </div>
      <div class="col-sm-2 lead text-center">
        <h3 class="team-average">?</h3>
      </div>
      <div class="col-sm-3"></div>
    </div>

    <div class="row">
      <div class="col-sm-3"></div>
      <div class="col-sm-6 lead">
        <div id="histogram"></div>
      </div>
      <div class="col-sm-3"></div>
    </div>
  </div>

</div>


<script>
function getUserHangoutId() {
  return gapi.hangout.getParticipantId();
}

function getParticipants() {
  return gapi.hangout.getParticipants();
}

function getState() {
  return gapi.hangout.data.getState();
}

function setState(state) {
  return gapi.hangout.data.submitDelta(state);
}

function vote(score) {
  var state = getState();
  if (state == null) {
    state = {};
  }
  state[getUserHangoutId()] = score;
  setState(state);
  $('.your-vote').html(score);
}

function updateAverages() {
  var set = getVotesFromState();
  var avg = average(set);
  $('.team-average').html(avg);
  updateParticipants();
  showVoteBreakdown();
}

function getVotesFromState() {
  var state = getState();
  var set = [];
  for (p in state) {
    set.push(state[p]-0);
  }
  return set;
}

function updateParticipants() {
  var state = getState();
  var participants = getParticipants();
  var nrVoting = Object.keys(state).length;
  $('.nr-voting').html(nrVoting);
  $('.nr-participants').html(participants.length);
}

function average(set) {
  var sum = 0;
  for(var i=0;i<set.length;i++) {
    sum += set[i];
  }
  var avg = 0;
  if (set.length > 0) {
    avg = sum / set.length;
  }
  return avg.toFixed(1);
}

// ------------------------------------
// Histogram chart setup
// ------------------------------------

google.load("visualization", "1", {packages:["corechart"]});

function showVoteBreakdown() {
  var scores = getVotesFromState();
  if (scores.length < 2) {
    $('#histogram').hide();
    return;
  } else {
    $('#histogram').show();
  }

  var table = [['Voter', 'Score']];

  for(var i=0;i<scores.length;i++) {
    table.push(['Person ' + (i+1), scores[i]]);
  }

  var data = google.visualization.arrayToDataTable(table);

  var options = {
    histogram: { bucketSize: 1 },
    legend: { position: 'none' },
    backgroundColor: '#333',
    width: '100%',
    hAxis: {
      textStyle: { color: '#fff' },
      gridlines: { count: -1, color: '#666' },
    },
    vAxis: {
      textStyle: { color: '#fff' },
      gridlines: { count: -1, color: '#333' },
      textPosition: 'none',
    },
    colors: ['#5bc0de', '#2a6496'],
  };

  var chart = new google.visualization.Histogram(document.getElementById('histogram'));
  chart.draw(data, options);
}

// ------------------------------------
// Initialize
// ------------------------------------

function init() {
  // When API is ready...
  gapi.hangout.onApiReady.add(
    function(eventObj) {
      if (eventObj.isApiReady) {
        $('.btn').click(function() {
          vote($(this).val());
        });

        updateParticipants();
      }
  });

  gapi.hangout.data.onStateChanged.add(function (event) {
    updateAverages();
    google.setOnLoadCallback(showVoteBreakdown);
  });
}

// Wait for gadget to load.
gadgets.util.registerOnLoadHandler(init);
</script>
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>
<script src="//netdna.bootstrapcdn.com/bootstrap/3.1.1/js/bootstrap.min.js"></script>
</body>
</html>
]]>
</Content>
</Module>
